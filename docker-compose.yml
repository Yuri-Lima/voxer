version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: voxer-postgres
    environment:
      POSTGRES_DB: voxer_studio
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-admin}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - voxer-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis para cache e sessões
  redis:
    image: redis:7-alpine
    container_name: voxer-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - voxer-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Principal
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: voxer-api
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: ${DB_PASSWORD:-admin}
      DB_NAME: voxer_studio
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_FROM: ${SMTP_FROM}
      CORS_ORIGIN: ${CORS_ORIGIN}
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - voxer-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Microserviço Market Survey
  market-survey:
    build:
      context: .
      dockerfile: apps/market-survey/Dockerfile
    container_name: voxer-market-survey
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: ${DB_PASSWORD:-admin}
      DB_NAME: voxer_studio
      API_BASE_URL: http://api:3001
    ports:
      - "3002:3002"
    depends_on:
      postgres:
        condition: service_healthy
      api:
        condition: service_healthy
    networks:
      - voxer-network
    restart: unless-stopped

  # Frontend Survey App (Público)
  survey-app:
    build:
      context: .
      dockerfile: apps/survey-app/Dockerfile
    container_name: voxer-survey-app
    ports:
      - "4200:80"
    depends_on:
      - api
      - market-survey
    networks:
      - voxer-network
    restart: unless-stopped

  # Frontend Survey Admin (Painel)
  survey-admin:
    build:
      context: .
      dockerfile: apps/survey-admin/Dockerfile
    container_name: voxer-survey-admin
    ports:
      - "4201:80"
    depends_on:
      - api
    networks:
      - voxer-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: voxer-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
      - survey-app
      - survey-admin
    networks:
      - voxer-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  voxer-network:
    driver: bridge

